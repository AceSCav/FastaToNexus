import sys

def FastaToDict(file):
    """
    Converts a FASTA file into a dictionary containing its sequences.

    Each line starting with '>' marks the beginning of a new sequence,
    and the sequence is stored in the dictionary until another '>' is found.

    Args:
        file (iterable): File containing data in FASTA format.

    Returns:
        dict: A dictionary where the keys are the sequence names and the values are the sequences.
    """
    seq_dict = {}
    for line in file:
        if line.startswith(">"):
            seq_name = line.strip()
            seq_dict[seq_name] = ""
        else:
            seq_dict[seq_name] += line.strip()
    return seq_dict 

def NexusHeader(seq_dict):
    """
    Creates the header of the NEXUS file from the sequence dictionary generated by the 'FastaToDict' function.

    The header includes the required structure of the `BEGIN DATA` block, with dimensions being the number of sequences 
    and the length of those sequences. The data format is set to DNA, using 'N' for unknown characters and '-' for gaps, 
    and it starts the `MATRIX` section where the sequences will be inserted into the file.

    Args:
        seq_dict (dict): A dictionary where the keys are sequence headers (e.g., '>seq1') and the values are the corresponding 
                         sequences (e.g., 'TAAGC...').

    Returns:
        str: A formatted string containing the NEXUS file header ready to be written.
    """

    seq_length = len(list(seq_dict.values())[0])
    num_seqs = len(seq_dict)
    header = "#NEXUS\n"
    header += "\n"
    header += "BEGIN DATA;\n"
    header += f"DIMENSIONS NTAX={num_seqs} NCHAR={seq_length};\n"
    header += "FORMAT DATATYPE=DNA MISSING=N GAP=-;\n"
    header += "MATRIX\n"
    return header

def NexusMatrix(seq_dict):
    """
    Creates the MATRIX section of the NEXUS file from the sequence dictionary.

    For each key in the dictionary, the sequence name (without the '>') is aligned with its corresponding sequence. 
    The structure follows the standard format of the MATRIX block in the NEXUS file format.

    Args:
        seq_dict (dict): Dictionary with keys as sequence names (e.g., '>seq1') and values as nucleotide sequences (e.g., 'TAAGC...').

    Returns:
        str: A string containing the sequences in the MATRIX block, ending with ';' and 'END;'.
    """

    matrix = ""
    for seq_name, seq in seq_dict.items():
        matrix += f"{seq_name[1::]} {seq}\n"
    matrix += ";\nEND;\n"
    return matrix


"""
    Main script execution block.

    This section handles command-line execution of the script. It expects a FASTA file as an argument.
    If a file is provided, it reads the file, converts the sequences to a dictionary using `FastaToDict`,
    generates the NEXUS header and MATRIX using `NexusHeader` and `NexusMatrix`, and prints the final
    NEXUS-formatted content to standard output.

    If no argument is provided, it prints a usage message and exits.

    Usage:
        python FastaToNexus.py file.fasta
"""
if __name__ == "__main__":
    if len(sys.argv) >= 2:
        in_file = sys.argv[1]
        with open(in_file, "r") as file:
            seq_dict = FastaToDict(file)
            header = NexusHeader(seq_dict)
            matrix = NexusMatrix(seq_dict)
            print(header + matrix)
    else:
        print("Usage: python FastaToNexus.py file.fasta")
        sys.exit(1)


